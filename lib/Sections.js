export var EventType;(function(EventType){EventType["START"]="start";EventType["MIDDLE"]="middle";EventType["END"]="end";})(EventType||(EventType={}));export var Direction;(function(Direction){Direction["UP"]="up";Direction["DOWN"]="down";})(Direction||(Direction={}));class Sections{constructor(options){this.options={selector:'.section',scrollEventBounce:10,resizeEventBounce:70};this.activeSection=null;this._scrollDirection={direction:Direction.DOWN,lastScrollTop:0};this.sections=[];this.elementsEvent=[];this.events={};this.resizeEvent=this.debounce(()=>{this.sections.splice(0,this.sections.length);this.setupSections();this.elementsEvent.map(i=>{const bounding=i.el.getBoundingClientRect();i.from=bounding.top;i.to=bounding.top+bounding.height;return i;});},this.options.resizeEventBounce);this.scrollEvent=this.debounce(()=>{this.scrollDirection();this.pageEvent();this.elementEvents();},this.options.scrollEventBounce);this.options=Object.assign(this.options,options);this.setupSections();this.pageEvent();window.addEventListener('scroll',this.scrollEvent.bind(this),{passive:true});window.addEventListener('resize',this.resizeEvent.bind(this),{passive:true});}
sectionStarted(cb){this.events.sectionStarted=cb;this.callPageEnteredEvent();return this;}
elementEvent(el,cb){const bounding=el.getBoundingClientRect();this.elementsEvent.push({from:bounding.top,to:bounding.top+bounding.height,active:false,middleTriggered:false,el,cb});return this;}
destroy(){window.removeEventListener('scroll',this.scrollEvent.bind(this));window.removeEventListener('resize',this.resizeEvent.bind(this));this.activeSection=null;this._scrollDirection={direction:Direction.DOWN,lastScrollTop:0};this.sections.splice(0,this.sections.length);this.elementsEvent.splice(0,this.elementsEvent.length);this.events={};}
scrollDirection(){if(window.pageYOffset>this._scrollDirection.lastScrollTop){this._scrollDirection.direction=Direction.DOWN;}
else{this._scrollDirection.direction=Direction.UP;}
this._scrollDirection.lastScrollTop=window.pageYOffset<=0?0:window.pageYOffset;}
pageEvent(){const sectionsY=this.sections.map(o=>o.to);const sectionId=Math.max(...sectionsY.filter(e=>window.scrollY>=e));const sectionIndex=sectionsY.indexOf(sectionId)+1;if(!this.activeSection){this.activeSection=this.sections[sectionIndex];this.callPageEnteredEvent();}
else if(this.activeSection&&this.activeSection.index!==sectionIndex){this.activeSection=this.sections[sectionIndex];this.callPageEnteredEvent();}}
elementEvents(){this.elementsEvent.forEach((i)=>{if(!this.activeSection){return;}
const start=this.activeSection.to-i.to;const end=this.activeSection.to-i.from;const center=Math.round(((end-start)/2)+start);if(!i.active&&window.scrollY>=start&&window.scrollY<=end){i.active=true;i.middleTriggered=false;i.cb(EventType.START,this._scrollDirection.direction,this.activeSection);}
else if(i.active&&window.scrollY<start||i.active&&window.scrollY>end){i.active=false;i.middleTriggered=false;i.cb(EventType.END,this._scrollDirection.direction,this.activeSection);}
if(i.active&&!i.middleTriggered){if(this._scrollDirection.direction===Direction.DOWN&&window.scrollY>=center||this._scrollDirection.direction===Direction.UP&&window.scrollY<=center){i.middleTriggered=true;i.cb(EventType.MIDDLE,this._scrollDirection.direction,this.activeSection);}}});}
setupSections(){this.sections=Array.from(window.document.querySelectorAll(this.options.selector)).map((el,index)=>{const from=Math.round(el.getBoundingClientRect().top)+window.scrollY;const to=Math.round(el.getBoundingClientRect().top+el.clientHeight)+window.scrollY;return{from,to,classList:[].slice.apply(el.classList),index};});}
callPageEnteredEvent(){if(!this.events.sectionStarted){return;}
if(this.activeSection){this.events.sectionStarted(this.activeSection,this._scrollDirection.direction);}}
debounce(cb,wait=70){let h=0;let callable=(...args)=>{clearTimeout(h);h=window.setTimeout(()=>cb(...args),wait);};return callable;}}
export default Sections;